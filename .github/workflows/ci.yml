name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  audit:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:

    - uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there could be errors pushing refs to the destination repository.

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.version }}

    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Install staticcheck
      run: go run honnef.co/go/tools/cmd/staticcheck@latest ./...

    - name: Install golint
      run: go run golang.org/x/lint/golint@latest ./...

    - name: Run tests
      run: |
        go test -race -vet=off -v ./... -covermode=atomic -coverprofile=coverage.out
        go tool cover -func=coverage.out -o=coverage.out

    - name: Go Coverage Badge
      uses: tj-actions/coverage-badge-go@v1.2
      with:
        filename: coverage.out

    # if coverage changed, README.md changed
    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v17
      id: verify-changed-files
      with:
        files: README.md

    - name: Commit changes
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "chore: Updated coverage badge."

    - name: Push changes
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ github.token }}
        branch: ${{ github.head_ref }}
